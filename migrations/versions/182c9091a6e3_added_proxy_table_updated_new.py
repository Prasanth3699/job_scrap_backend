"""added Proxy table updated new

Revision ID: 182c9091a6e3
Revises: bda70af323f7
Create Date: 2025-03-18 23:15:33.727326

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "182c9091a6e3"
down_revision: Union[str, None] = "bda70af323f7"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute(
        "CREATE TYPE proxyprotocol AS ENUM ('HTTP', 'HTTPS', 'SOCKS4', 'SOCKS5')"
    )
    op.execute(
        "CREATE TYPE anonymitylevel AS ENUM ('TRANSPARENT', 'ANONYMOUS', 'HIGH_ANONYMITY')"
    )
    op.add_column("proxies", sa.Column("city", sa.String(), nullable=True))
    op.add_column("proxies", sa.Column("latitude", sa.Float(), nullable=True))
    op.add_column("proxies", sa.Column("longitude", sa.Float(), nullable=True))
    op.add_column("proxies", sa.Column("total_requests", sa.Integer(), nullable=True))
    op.add_column(
        "proxies", sa.Column("successful_requests", sa.Integer(), nullable=True)
    )
    op.add_column("proxies", sa.Column("failed_requests", sa.Integer(), nullable=True))
    op.add_column("proxies", sa.Column("created_at", sa.DateTime(), nullable=True))
    op.add_column("proxies", sa.Column("updated_at", sa.DateTime(), nullable=True))
    op.add_column("proxies", sa.Column("supports_ssl", sa.Boolean(), nullable=True))
    op.add_column(
        "proxies", sa.Column("supports_streaming", sa.Boolean(), nullable=True)
    )
    op.add_column("proxies", sa.Column("provider", sa.String(), nullable=True))
    op.add_column("proxies", sa.Column("source_type", sa.String(), nullable=True))
    op.add_column("proxies", sa.Column("reliability_score", sa.Float(), nullable=True))
    op.add_column("proxies", sa.Column("performance_score", sa.Float(), nullable=True))

    op.execute(
        """
        ALTER TABLE proxies 
        ALTER COLUMN protocol TYPE proxyprotocol 
        USING (
            CASE 
                WHEN protocol = 'http' THEN 'HTTP'::proxyprotocol
                WHEN protocol = 'https' THEN 'HTTPS'::proxyprotocol
                WHEN protocol = 'socks4' THEN 'SOCKS4'::proxyprotocol
                WHEN protocol = 'socks5' THEN 'SOCKS5'::proxyprotocol
                ELSE 'HTTP'::proxyprotocol  -- default fallback
            END
        )
    """
    )

    # Similarly for anonymity
    op.execute(
        """
        ALTER TABLE proxies 
        ALTER COLUMN anonymity TYPE anonymitylevel 
        USING (
            CASE 
                WHEN anonymity = 'transparent' THEN 'TRANSPARENT'::anonymitylevel
                WHEN anonymity = 'anonymous' THEN 'ANONYMOUS'::anonymitylevel
                WHEN anonymity = 'high_anonymity' THEN 'HIGH_ANONYMITY'::anonymitylevel
                ELSE 'TRANSPARENT'::anonymitylevel  -- default fallback
            END
        )
    """
    )

    # Make columns non-nullable if needed
    op.alter_column("proxies", "protocol", nullable=False)
    op.alter_column("proxies", "anonymity", nullable=False)

    # op.alter_column(
    #     "proxies",
    #     "protocol",
    #     existing_type=sa.VARCHAR(),
    #     type_=sa.Enum("HTTP", "HTTPS", "SOCKS4", "SOCKS5", name="proxyprotocol"),
    #     nullable=False,
    # )
    # op.alter_column(
    #     "proxies",
    #     "anonymity",
    #     existing_type=sa.VARCHAR(),
    #     type_=sa.Enum(
    #         "TRANSPARENT", "ANONYMOUS", "HIGH_ANONYMITY", name="anonymitylevel"
    #     ),
    #     nullable=False,
    # )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column("proxies", "protocol", type_=sa.String(), nullable=True)
    op.alter_column("proxies", "anonymity", type_=sa.String(), nullable=True)

    # Drop enum types
    op.execute("DROP TYPE IF EXISTS proxyprotocol")
    op.execute("DROP TYPE IF EXISTS anonymitylevel")

    # Drop added columns
    op.drop_column("proxies", "performance_score")
    op.drop_column("proxies", "reliability_score")
    op.drop_column("proxies", "source_type")
    op.drop_column("proxies", "provider")
    op.drop_column("proxies", "supports_streaming")
    op.drop_column("proxies", "supports_ssl")
    op.drop_column("proxies", "updated_at")
    op.drop_column("proxies", "created_at")
    op.drop_column("proxies", "failed_requests")
    op.drop_column("proxies", "successful_requests")
    op.drop_column("proxies", "total_requests")
    op.drop_column("proxies", "longitude")
    op.drop_column("proxies", "latitude")
    op.drop_column("proxies", "city")
    # ### end Alembic commands ###
